{"version":3,"sources":["App.js","index.js"],"names":["pdfjs","GlobalWorkerOptions","workerSrc","version","recorder","MicRecorder","bitRate","App","useState","isRecording","setRecording","isPlaying","setPlaying","isProcessing","setProcessing","audio","setAudio","midi","setMidi","score","setScore","onStopButtonClick","pause","currentTime","numPages","setNumPages","pageNumber","setPageNumber","className","Button","variant","color","onClick","stop","getMp3","then","buffer","blob","console","log","form","FormData","headers","contentType","responseType","file","File","type","lastModified","Date","now","Audio","URL","createObjectURL","onEnded","append","filename","v4","axios","post","res","Blob","data","get","catch","err","e","alert","startIcon","start","error","play","saveAs","onLoadSuccess","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07c7c363.chunk.js","sourcesContent":["import { useState } from 'react'\nimport MicRecorder from 'mic-recorder-to-mp3'\nimport axios from 'axios'\nimport { v4 } from 'uuid'\nimport { Document, Page, pdfjs } from 'react-pdf'\nimport { saveAs } from 'file-saver'\nimport { Button } from '@material-ui/core'\nimport StopIcon from '@material-ui/icons/Stop'\nimport RecordIcon from '@material-ui/icons/Mic'\nimport PlayIcon from '@material-ui/icons/PlayArrow'\nimport PauseIcon from '@material-ui/icons/Pause'\nimport SaveIcon from '@material-ui/icons/Save'\nimport MidiIcon from '@material-ui/icons/MusicNote'\n\nimport './App.css'\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`\n\nconst recorder = new MicRecorder({\n  bitRate: 320\n})\n\nexport default function App () {\n  const [isRecording, setRecording] = useState(false)\n  const [isPlaying, setPlaying] = useState(false)\n  const [isProcessing, setProcessing] = useState(false)\n  const [audio, setAudio] = useState(null)\n  const [midi, setMidi] = useState(null)\n  const [score, setScore] = useState(null)\n\n  const onStartRecordingButtonClick = () => {\n    setRecording(true)\n    recorder.start().then(() => {\n      console.log('Recording!!')\n    })\n      .catch((e) => {\n        console.error(e)\n      })\n  }\n\n  const onStopRecordingButtonClick = () => {\n    setRecording(false)\n    recorder.stop().getMp3().then(([buffer, blob]) => {\n      console.log('Finished recording!')\n      const form = new FormData()\n      const headers = {\n        contentType: 'multipart/form-data',\n        responseType: 'blob'\n      }\n      const file = new File(buffer, 'audio.mp3', {\n        type: blob.type,\n        lastModified: Date.now()\n      })\n      setAudio(new Audio(URL.createObjectURL(file), { onEnded: onStopButtonClick }))\n      form.append('file', file)\n      setProcessing(true)\n      const filename = v4()\n      axios.post(`https://18.230.199.14:5000/convert?filename=${filename}`, form, headers)\n        .then((res) => {\n          const blob = new Blob([res.data], { type: 'application/pdf' })\n          setScore(URL.createObjectURL(blob))\n          axios.get(`https://18.230.199.14:5000/get_midi/${filename}`, headers)\n            .then((res) => {\n              const blob = new Blob([res.data], { type: 'audio/midi' })\n              setMidi(URL.createObjectURL(blob))\n              setProcessing(false)\n            })\n        })\n        .catch((err) => console.log(err))\n    })\n      .catch((e) => {\n        alert('We could not retrieve your message')\n        console.log(e)\n      })\n  }\n\n  const onStopButtonClick = () => {\n    if (audio && isPlaying) {\n      setPlaying(false)\n      audio.pause()\n      audio.currentTime = 0\n    }\n  }\n\n  const onPauseButtonClick = () => {\n    if (audio && isPlaying) {\n      setPlaying(false)\n      audio.pause()\n    }\n  }\n\n  const onPlayButtonClick = () => {\n    if (audio) {\n      setPlaying(true)\n      audio.play()\n    }\n  }\n\n  const saveScore = () => {\n    saveAs(score, 'score.pdf')\n  }\n\n  const saveMidi = () => {\n    saveAs(midi, 'score.mid')\n  }\n\n  const [numPages, setNumPages] = useState(null)\n  const [pageNumber, setPageNumber] = useState(1)\n\n  const onDocumentLoadSuccess = ({ numPages }) => {\n    setNumPages(numPages)\n    setPageNumber(1)\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Melody Snippets</h1>\n      </header>\n      <body className=\"App-body\">\n        { isRecording\n          ? (<Button variant=\"contained\" color=\"secondary\" onClick={onStopRecordingButtonClick} startIcon={<StopIcon />}>Stop Recording</Button>)\n          : (<Button variant=\"contained\" color=\"primary\" onClick={onStartRecordingButtonClick} startIcon={<RecordIcon />}>Start Recording</Button>)\n        }\n        <div>\n          <Button variant=\"contained\" color=\"default\" onClick={onPlayButtonClick} startIcon={<PlayIcon />}></Button>\n          <Button variant=\"contained\" color=\"default\" onClick={onPauseButtonClick} startIcon={<PauseIcon />}></Button>\n          <Button variant=\"contained\" color=\"default\" onClick={onStopButtonClick} startIcon={<StopIcon />}></Button>\n        </div>\n        {\n          isProcessing\n            ? (<span>Processing...</span>)\n            : null\n        }\n        { score\n          ? (\n              <div>\n                <Button variant=\"contained\" color=\"primary\" onClick={saveScore} startIcon={<SaveIcon />}>Save PDF</Button>\n                <Button variant=\"contained\" color=\"primary\" onClick={saveMidi} startIcon={<MidiIcon />}>Save MIDI</Button>\n                <Document file={score} onLoadSuccess={onDocumentLoadSuccess}>\n                <Page pageNumber={pageNumber} />\n                </Document>\n                <p>Page {pageNumber} of {numPages}</p>\n              </div>\n            )\n          : null }\n      </body>\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}